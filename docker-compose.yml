version: '3.5'

services:
  db:
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - '3306:3306'
    volumes:
      - ./_mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - database_volume:/var/lib/mysql
    networks:
      - database_network
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

  redis:
    image: redis:6.2.6
    networks:
      - redis_network

  nginx:
    image: nginx:1.20.2-alpine
    ports:
      # Will be available @ localhost:80
      - "80:80"
    depends_on:
      # Make sure Django's built so Nginx can serve its static content
      - django
    volumes:
      # Django's static files
      - static_files_volume:/usr/share/nginx/html/static
      # Nginx config
      - ./_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./_nginx/templates:/etc/nginx/templates
    networks:
      - nginx_network
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.conf
      - DJANGO_APP_URL

  django:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DJANGO_SECRET_KEY
    depends_on:
      - db
      - redis
    command: gunicorn src.wsgi -c gunicorn.cfg.py --reload
    volumes:
      - ./_app:/usr/src/app
      # Django static files will go here so Nginx can access them
      - static_files_volume:/usr/src/app/static
    networks:
      - nginx_network
      - database_network
      - redis_network
    environment:
      - PYTHONUNBUFFERED=0
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - DJANGO_SECRET_KEY
      - DJANGO_APP_URL
      - DJANGO_APP_NAME
      - DJANGO_DEBUG

volumes:
  static_files_volume:
  database_volume:

networks:
  nginx_network:
  database_network:
  redis_network:
